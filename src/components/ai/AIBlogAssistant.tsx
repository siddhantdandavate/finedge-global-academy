
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Wand2, 
  RefreshCw, 
  Lightbulb, 
  FileText, 
  Search, 
  TrendingUp,
  Eye,
  Copy,
  CheckCircle,
  Edit,
  Save,
  Send
} from 'lucide-react';

const AIBlogAssistant: React.FC = () => {
  const [blogContent, setBlogContent] = useState('');
  const [blogTitle, setBlogTitle] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [suggestions, setSuggestions] = useState<string[]>([]);
  const [seoKeywords, setSeoKeywords] = useState<string[]>([]);

  const aiFeatures = [
    {
      id: 'expand',
      title: 'Expand Content',
      description: 'Add more detail and depth to your content',
      icon: RefreshCw,
      action: () => handleAIAction('expand')
    },
    {
      id: 'summarize',
      title: 'Summarize',
      description: 'Create a concise summary of your content',
      icon: FileText,
      action: () => handleAIAction('summarize')
    },
    {
      id: 'improve',
      title: 'Improve Writing',
      description: 'Enhance clarity, flow, and readability',
      icon: Edit,
      action: () => handleAIAction('improve')
    },
    {
      id: 'seo',
      title: 'SEO Optimize',
      description: 'Optimize for search engines and keywords',
      icon: TrendingUp,
      action: () => handleAIAction('seo')
    }
  ];

  const handleAIAction = async (action: string) => {
    setIsProcessing(true);
    
    // Simulate AI processing
    setTimeout(() => {
      switch (action) {
        case 'expand':
          setBlogContent(prev => prev + '\n\nAdditional content generated by AI to expand on your ideas...');
          break;
        case 'summarize':
          setSuggestions(['Key point 1: Main concept explained', 'Key point 2: Supporting evidence', 'Key point 3: Conclusion and implications']);
          break;
        case 'improve':
          setBlogContent(prev => prev.replace(/\b(good|nice|great)\b/g, 'excellent'));
          break;
        case 'seo':
          setSeoKeywords(['finance', 'accounting', 'chartered accountant', 'tax planning', 'financial reporting']);
          break;
      }
      setIsProcessing(false);
    }, 2000);
  };

  const generateTitleSuggestions = () => {
    const titleSuggestions = [
      'Understanding Modern Financial Regulations: A CA\'s Guide',
      'Cross-Border Tax Planning Strategies for 2024',
      'IFRS Updates: What Chartered Accountants Need to Know',
      'Digital Transformation in Finance: Opportunities and Challenges',
      'ESG Reporting: The Future of Corporate Accountability'
    ];
    setSuggestions(titleSuggestions);
  };

  const saveDraft = () => {
    console.log('Saving draft...', { title: blogTitle, content: blogContent });
  };

  const submitForReview = () => {
    console.log('Submitting for admin review...', { title: blogTitle, content: blogContent });
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">AI Blog Assistant</h1>
          <p className="text-gray-600">Create compelling finance content with AI-powered assistance</p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* AI Tools Sidebar */}
          <div className="lg:col-span-1">
            <Card className="mb-6">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Wand2 className="h-5 w-5 mr-2" />
                  AI Tools
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {aiFeatures.map((feature) => (
                  <Button
                    key={feature.id}
                    variant="outline"
                    className="w-full justify-start h-auto p-3"
                    onClick={feature.action}
                    disabled={isProcessing}
                  >
                    <div className="flex items-start">
                      <feature.icon className="h-4 w-4 mr-3 mt-1 flex-shrink-0" />
                      <div className="text-left">
                        <div className="font-medium text-sm">{feature.title}</div>
                        <div className="text-xs text-gray-500 mt-1">{feature.description}</div>
                      </div>
                    </div>
                  </Button>
                ))}
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Lightbulb className="h-5 w-5 mr-2" />
                  Suggestions
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <Button 
                    variant="outline" 
                    className="w-full text-left justify-start"
                    onClick={generateTitleSuggestions}
                  >
                    Generate Title Ideas
                  </Button>
                  
                  {suggestions.length > 0 && (
                    <div className="space-y-2">
                      <Label className="text-sm font-medium">Suggestions:</Label>
                      {suggestions.map((suggestion, index) => (
                        <div 
                          key={index} 
                          className="p-2 bg-blue-50 rounded-lg cursor-pointer hover:bg-blue-100 transition-colors"
                          onClick={() => {
                            if (suggestion.includes(':')) {
                              setBlogTitle(suggestion);
                            } else {
                              setBlogContent(prev => prev + '\n\n' + suggestion);
                            }
                          }}
                        >
                          <p className="text-sm text-blue-800">{suggestion}</p>
                        </div>
                      ))}
                    </div>
                  )}

                  {seoKeywords.length > 0 && (
                    <div className="space-y-2">
                      <Label className="text-sm font-medium">SEO Keywords:</Label>
                      <div className="flex flex-wrap gap-1">
                        {seoKeywords.map((keyword, index) => (
                          <Badge key={index} variant="secondary" className="text-xs">
                            {keyword}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Main Editor */}
          <div className="lg:col-span-2">
            <Card>
              <CardHeader>
                <CardTitle>Blog Editor</CardTitle>
                <CardDescription>Create your blog post with AI assistance</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <Label htmlFor="title">Blog Title</Label>
                  <Input
                    id="title"
                    value={blogTitle}
                    onChange={(e) => setBlogTitle(e.target.value)}
                    placeholder="Enter your blog title..."
                    className="mt-1"
                  />
                </div>

                <Tabs defaultValue="editor" className="w-full">
                  <TabsList className="grid w-full grid-cols-2">
                    <TabsTrigger value="editor">Editor</TabsTrigger>
                    <TabsTrigger value="preview">Preview</TabsTrigger>
                  </TabsList>
                  
                  <TabsContent value="editor" className="space-y-4">
                    <div>
                      <Label htmlFor="content">Content</Label>
                      <Textarea
                        id="content"
                        value={blogContent}
                        onChange={(e) => setBlogContent(e.target.value)}
                        placeholder="Start writing your blog post... Use the AI tools on the left to enhance your content."
                        className="mt-1 min-h-96"
                      />
                    </div>
                    
                    {isProcessing && (
                      <div className="flex items-center justify-center p-4 bg-blue-50 rounded-lg">
                        <RefreshCw className="h-4 w-4 animate-spin mr-2" />
                        <span className="text-blue-700">AI is processing your content...</span>
                      </div>
                    )}
                  </TabsContent>
                  
                  <TabsContent value="preview" className="space-y-4">
                    <div className="border rounded-lg p-6 bg-white">
                      <h1 className="text-2xl font-bold mb-4">{blogTitle || 'Your Blog Title'}</h1>
                      <div className="prose max-w-none">
                        {blogContent.split('\n').map((paragraph, index) => (
                          <p key={index} className="mb-4">{paragraph}</p>
                        ))}
                      </div>
                    </div>
                  </TabsContent>
                </Tabs>

                <div className="flex gap-3">
                  <Button variant="outline" onClick={saveDraft} className="flex-1">
                    <Save className="h-4 w-4 mr-2" />
                    Save Draft
                  </Button>
                  <Button onClick={submitForReview} className="flex-1 bg-green-600 hover:bg-green-700">
                    <Send className="h-4 w-4 mr-2" />
                    Submit for Review
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Analytics & Tips */}
          <div className="lg:col-span-1">
            <Card className="mb-6">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <TrendingUp className="h-5 w-5 mr-2" />
                  Content Analytics
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-600">Word Count</span>
                    <span className="font-medium">{blogContent.split(' ').length}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-600">Reading Time</span>
                    <span className="font-medium">{Math.ceil(blogContent.split(' ').length / 200)} min</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-600">SEO Score</span>
                    <Badge variant="secondary">Good</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Lightbulb className="h-5 w-5 mr-2" />
                  Writing Tips
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="p-3 bg-green-50 rounded-lg">
                    <div className="flex items-center mb-2">
                      <CheckCircle className="h-4 w-4 text-green-600 mr-2" />
                      <span className="font-medium text-green-800 text-sm">Good Title Length</span>
                    </div>
                    <p className="text-xs text-green-700">
                      Your title is the optimal length for SEO and readability.
                    </p>
                  </div>
                  
                  <div className="p-3 bg-blue-50 rounded-lg">
                    <div className="flex items-center mb-2">
                      <Eye className="h-4 w-4 text-blue-600 mr-2" />
                      <span className="font-medium text-blue-800 text-sm">Add Visuals</span>
                    </div>
                    <p className="text-xs text-blue-700">
                      Consider adding images or charts to make your content more engaging.
                    </p>
                  </div>

                  <div className="p-3 bg-purple-50 rounded-lg">
                    <div className="flex items-center mb-2">
                      <Search className="h-4 w-4 text-purple-600 mr-2" />
                      <span className="font-medium text-purple-800 text-sm">SEO Opportunity</span>
                    </div>
                    <p className="text-xs text-purple-700">
                      Include more finance-related keywords to improve discoverability.
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AIBlogAssistant;
